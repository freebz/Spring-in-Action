<!-- 코드 8.4  웹 플로에서 배고픈 피자 고객 확인하기 -->

<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
			  http://www.springframework.org/schema/webflow/spring-webflow-2.3.xsd">
  <var name="customer"
       class="com.springinaction.pizza.domain.Customer"/>
  <view-state id="welcome">  <!-- 고객 환영하기 -->
    <transition on="phoneEntered" to="lookupCustomer"/>
  </view-state>
  <action-state id="lookupCustomer">  <!-- 고객 검색 -->
    <evaluate result="customer" expression=
	      "pizzaFlowActions.lookupCustomer(requestParameters.phoneNumber)" />
    <transition to="customerReady" />
  </action-state>
  <view-state id="registrationForm" model="customer">  <!-- 새로운 고객 등록 -->
    <on-entry>
      <evaluate expression=
		"customer.phoneNumber = requestParameters.phoneNumber" />
    </on-entry>
    <transition on="submit" to="checkDeliveryArea" />
  </view-state>
  <decision-state id="checkDeliveryArea">  <!-- 배달 지역 확인 -->
    <if test="pizzaFlowActions.checkDeliveryArea(customer.zipCode)"
	then="addCustomer"
	else="deliveryWarning"/>
  </decision-state>
  <view-state id="deliveryWarning">  <!-- 배달 경고 표시 -->
    <transition on="accept" to="addCustomer" />
  </view-state>
  <action-state id="addCustomer"  <!-- 고객 추가 -->
    <evaluate expression="pizzaFlowActions.addCustomer(customer)" />
    <transition to="customerReady" />
  </action-state>
  <end-state id="cancel" />
  <end-state id="customerReady">
    <output name="customer" />
  </end-state>
  <global-transitions>
    <transition on="cancel" to="cancel" />
  </global-transitions>
</flow>
